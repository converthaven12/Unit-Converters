// File: src/Helper/conversionFactors.ts

// A map of each unit to its value in a “base” unit.
// Feel free to extend this with any additional units you need.
export const conversionFactors: Record<string, number> = {
  // Length
  meter: 1,
  kilometer: 1000,
  centimeter: 0.01,
  millimeter: 0.001,
  mile: 1609.344,
  yard: 0.9144,
  foot: 0.3048,
  inch: 0.0254,

  // Mass
  kilogram: 1,
  gram: 0.001,
  milligram: 0.000001,
  pound: 0.45359237,
  ounce: 0.0283495231,

  // Time
  second: 1,
  minute: 60,
  hour: 3600,
  day: 86400,

  // Volume
  liter: 1,
  milliliter: 0.001,
  gallon: 3.785411784,
  pint: 0.473176473,

  // Temperature (handled specially below)
  celsius: 0,    // not used in the same way
  fahrenheit: 0, // ditto
}

/**
 * Convert a numeric `value` from one unit into another.
 * Units marked “0” in the table above (like temperature) must
 * be handled outside this generic linear formula.
 */
export function convert(
  value: number,
  from: string,
  to: string
): number {
  // temperature cases
  if (from === 'celsius' && to === 'fahrenheit') {
    return (value * 9) / 5 + 32
  }
  if (from === 'fahrenheit' && to === 'celsius') {
    return ((value - 32) * 5) / 9
  }
  if (
    (from === 'celsius' && to === 'celsius') ||
    (from === 'fahrenheit' && to === 'fahrenheit')
  ) {
    return value
  }

  // all other units: convert `value` → base unit → target unit
  const fromFactor = conversionFactors[from]
  const toFactor = conversionFactors[to]

  if (fromFactor == null || toFactor == null) {
    throw new Error(`Unknown conversion from "${from}" → "${to}"`)
  }

  return (value * fromFactor) / toFactor
}
